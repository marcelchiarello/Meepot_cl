rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImageFile() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read: if true;
      allow write: if isOwner(userId) && isValidImageFile();
    }
    
    // Event images
    match /events/{eventId}/images/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && isValidImageFile();
    }
    
    // Task attachments
    match /events/{eventId}/tasks/{taskId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.resource.size < 25 * 1024 * 1024; // 25MB limit
    }
    
    // Expense receipts
    match /events/{eventId}/expenses/{expenseId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                     (request.resource.contentType.matches('image/.*') || 
                      request.resource.contentType == 'application/pdf') &&
                     request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
  }
}